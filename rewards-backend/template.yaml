AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for rewards-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 512
    Environment:
      Variables:
        JWT_SECRET: Some JWT Secret
        DATABASE_URL: database url

Resources:
  RewardsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod # Define the Stage Name once
      Auth:
        Authorizers:
          JwtAuthorizer: # Logical ID of the Authorizer
            FunctionArn: !GetAtt JwtAuthorizerFunction.Arn
            IdentitySource: method.request.header.Authorization
            AuthorizerResultTtlInSeconds: 300
            Type: TOKEN
  JwtAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: JwtAuthorizer
      Handler: JwtAuthorizer::JwtAuthorizer.Function::AuthorizerHandler
      CodeUri: src/JwtAuthorizer/
      Runtime: dotnet8
      Architectures:
        - x86_64
      MemorySize: 512
  LoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./src/Login/
      Handler: Login::Login.Function::FunctionHandler
      Runtime: dotnet8
      Architectures:
        - x86_64
      MemorySize: 512
      Events:
        Login:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /login
            Method: post
            Auth:
              Unauthorize: {}
  RewardsReaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/RewardsReader/
      Handler: RewardsReader::RewardsReader.Function::FunctionHandler
      Runtime: dotnet8
      Architectures:
        - x86_64
      MemorySize: 512
      Events:
        GetRewards:
          Type: Api
          Properties:
            RestApiId: !Ref RewardsApi
            Path: /rewards
            Method: get
            Auth:
              Authorizer: JwtAuthorizer

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LoginApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/Prod/hello/"
  LoginFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt LoginFunctionRole.Arn
